{"ast":null,"code":"var _jsxFileName = \"D:\\\\self-study\\\\\\u524D\\u7AEF\\\\Memo\\\\memo\\\\src\\\\components\\\\Login.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: '',\n      password: '',\n      showInvalidWarning: false\n    };\n\n    this.changeUsername = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.changePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.login = () => {\n      // this.props.login(this.state.username)\n      fetch('http://localhost:9000/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(res => {\n        res = res.json();\n        return res;\n      }).then(res => {\n        const isValid = res.result;\n\n        if (isValid) {\n          this.props.login(this.state.username);\n        } else {}\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"MEMO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: this.state.username,\n          onChange: this.changeUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: this.state.password,\n          onChange: this.changePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-btn btn\",\n        onClick: this.login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["D:/self-study/前端/Memo/memo/src/components/Login.js"],"names":["React","Login","Component","state","username","password","showInvalidWarning","changeUsername","e","setState","target","value","changePassword","login","fetch","method","body","JSON","stringify","then","res","json","isValid","result","props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,kBAAkB,EAAE;AAHhB,KAFwB;;AAAA,SAQhCC,cARgC,GAQfC,CAAC,IAAI;AAClB,WAAKC,QAAL,CAAc;AACVL,QAAAA,QAAQ,EAAEI,CAAC,CAACE,MAAF,CAASC;AADT,OAAd;AAGH,KAZ+B;;AAAA,SAchCC,cAdgC,GAcfJ,CAAC,IAAI;AAClB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAEG,CAAC,CAACE,MAAF,CAASC;AADT,OAAd;AAGH,KAlB+B;;AAAA,SAoBhCE,KApBgC,GAoBxB,MAAM;AACV;AACAC,MAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCC,QAAAA,MAAM,EAAE,MADyB;AAEjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBd,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADJ;AAEjBC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFJ,SAAf;AAF2B,OAAhC,CAAL,CAOCc,IAPD,CAOMC,GAAG,IAAI;AACTA,QAAAA,GAAG,GAAGA,GAAG,CAACC,IAAJ,EAAN;AACA,eAAOD,GAAP;AACH,OAVD,EAWCD,IAXD,CAWMC,GAAG,IAAI;AACT,cAAME,OAAO,GAAGF,GAAG,CAACG,MAApB;;AACA,YAAID,OAAJ,EAAa;AACT,eAAKE,KAAL,CAAWX,KAAX,CAAiB,KAAKV,KAAL,CAAWC,QAA5B;AACH,SAFD,MAEO,CAEN;AACJ,OAlBD;AAmBH,KAzC+B;AAAA;;AA2ChCqB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,UAAtB;AAAiC,UAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,QAAnD;AAA6D,UAAA,QAAQ,EAAE,KAAKG;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,EAAE,EAAC,UAA1B;AAAqC,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,QAAvD;AAAiE,UAAA,QAAQ,EAAE,KAAKO;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,OAAO,EAAE,KAAKC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA5D+B;;AAgEpC,eAAeZ,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        showInvalidWarning: false\r\n    }\r\n\r\n    changeUsername = e => {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    changePassword = e => {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n        // this.props.login(this.state.username)\r\n        fetch('http://localhost:9000/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n        })\r\n        .then(res => {\r\n            res = res.json()\r\n            return res\r\n        })\r\n        .then(res => {\r\n            const isValid = res.result\r\n            if (isValid) {\r\n                this.props.login(this.state.username)\r\n            } else {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"title\">MEMO</div>\r\n                <div className=\"wrapper\">\r\n                    <label htmlFor=\"username\">Username: </label>\r\n                    <input type=\"text\" id=\"username\" value={this.state.username} onChange={this.changeUsername} />\r\n                </div>\r\n                <div className=\"wrapper\">\r\n                    <label htmlFor=\"password\">Password: </label>\r\n                    <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.changePassword} />\r\n                </div>\r\n                <div className=\"login-btn btn\" onClick={this.login}>Login</div>\r\n                <br />\r\n                <div className=\"btn\">Sign up</div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}