{"ast":null,"code":"var _jsxFileName = \"D:\\\\self-study\\\\\\u524D\\u7AEF\\\\Memo\\\\memo\\\\src\\\\components\\\\Main.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Memo from \"./Memo\";\nimport MemoEditor from \"./MemoEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      memos: [],\n      viewMemoId: -1,\n      adding: false\n    };\n\n    this.showMemoEditor = () => {\n      this.setState({\n        adding: true\n      });\n    };\n\n    this.viewContent = id => {\n      this.setState({\n        viewMemoId: this.state.viewMemoId === id ? -1 : id\n      });\n    };\n\n    this.setMemos = memos => {\n      this.setState({\n        memos,\n        adding: false\n      });\n    };\n\n    this.cancelAddingMemo = () => {\n      this.setState({\n        adding: false\n      });\n    };\n\n    this.fetchMemo = () => {\n      fetch(`http://localhost:9000/memo/${this.props.username}`, {\n        method: 'GET'\n      }).then(res => {\n        res = res.json();\n        return res;\n      }).then(res => {\n        const memos = res.memos;\n        memos.forEach(memo => {\n          memo.date = new Date(memo.date);\n        });\n        this.setState({\n          memos\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        username: this.props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-section ov\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.adding ? \"memos memos-when-adding\" : \"memos\",\n          children: this.state.memos.map(memo => /*#__PURE__*/_jsxDEV(Memo, {\n            memo: memo,\n            viewContent: this.viewContent,\n            showContent: memo._id === this.state.viewMemoId,\n            update: () => {\n              this.forceUpdate();\n            }\n          }, memo._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), this.state.memos.length === 0 && !this.state.adding ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-memo\",\n          children: \"There is no memo yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 74\n        }, this) : null, this.state.adding ? /*#__PURE__*/_jsxDEV(MemoEditor, {\n          setMemos: this.setMemos,\n          cancelAddingMemo: this.cancelAddingMemo,\n          username: this.props.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 42\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), this.state.adding ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new\",\n        onClick: this.showMemoEditor,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:9000/memo/${this.props.username}`, {\n      method: 'GET'\n    }).then(res => {\n      res = res.json();\n      return res;\n    }).then(res => {\n      const memos = res.memos;\n      memos.forEach(memo => {\n        memo.date = new Date(memo.date);\n      });\n      this.setState({\n        memos\n      });\n    });\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["D:/self-study/前端/Memo/memo/src/components/Main.js"],"names":["React","Header","Memo","MemoEditor","Main","Component","state","memos","viewMemoId","adding","showMemoEditor","setState","viewContent","id","setMemos","cancelAddingMemo","fetchMemo","fetch","props","username","method","then","res","json","forEach","memo","date","Date","render","map","_id","forceUpdate","length","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Memo from \"./Memo\";\r\nimport MemoEditor from \"./MemoEditor\";\r\n\r\nclass Main extends React.Component {\r\n\r\n    state = {\r\n        memos: [],\r\n        viewMemoId: -1,\r\n        adding: false\r\n    }\r\n\r\n    showMemoEditor = () => {\r\n        this.setState({\r\n            adding: true\r\n        })\r\n    }\r\n\r\n    viewContent = id => {\r\n        this.setState({\r\n            viewMemoId: this.state.viewMemoId === id ? -1 : id\r\n        })\r\n    }\r\n\r\n    setMemos = memos => {\r\n        this.setState({\r\n            memos,\r\n            adding: false\r\n        })\r\n    }\r\n\r\n    cancelAddingMemo = () => {\r\n        this.setState({\r\n            adding: false\r\n        })\r\n    }\r\n\r\n    fetchMemo = () => {\r\n        fetch(`http://localhost:9000/memo/${this.props.username}`, {\r\n            method: 'GET',\r\n        }).then(res => {\r\n            res = res.json()\r\n            return res\r\n        }).then(res => {\r\n            const memos = res.memos\r\n            memos.forEach(memo => {\r\n                memo.date = new Date(memo.date)\r\n            })\r\n            this.setState({\r\n                memos\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Main\">\r\n                <Header username={this.props.username} />\r\n                <div className=\"main-section ov\">\r\n                    <div className={this.state.adding ? \"memos memos-when-adding\" : \"memos\"}>\r\n                        {\r\n                            this.state.memos.map(memo => (\r\n                                <Memo key={memo._id} memo={memo} viewContent={this.viewContent} showContent={memo._id === this.state.viewMemoId} \r\n                                    update={() => {this.forceUpdate()}} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    {this.state.memos.length===0 && !this.state.adding ? <div className=\"no-memo\">There is no memo yet</div> : null}\r\n                    {this.state.adding ? <MemoEditor setMemos={this.setMemos} cancelAddingMemo={this.cancelAddingMemo} username={this.props.username} /> : null}\r\n                </div>\r\n                {this.state.adding ? null : <div className=\"add-new\" onClick={this.showMemoEditor}>+</div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`http://localhost:9000/memo/${this.props.username}`, {\r\n            method: 'GET',\r\n        }).then(res => {\r\n            res = res.json()\r\n            return res\r\n        }).then(res => {\r\n            const memos = res.memos\r\n            memos.forEach(memo => {\r\n                memo.date = new Date(memo.date)\r\n            })\r\n            this.setState({\r\n                memos\r\n            })\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}